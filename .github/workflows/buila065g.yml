name: Build A066 Kernel v5.1 (Clean + Repack boot.img from Release)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
    - name: Checkout source
      uses: actions/checkout@v4

    - name: Setup toolchain (Proton Clang)
      run: |
        git clone --depth=1 https://github.com/kdrag0n/proton-clang toolchain

    - name: Fix permissions
      run: |
        chmod +x kernel-5.15/scripts/*.sh || true
        chmod +x kernel-5.15/scripts/*/*.sh || true


    - name: Build kernel (a06x_defconfig)
      run: |
        export PATH=$PWD/toolchain/bin:$PATH
        export ARCH=arm64
        export SUBARCH=arm64
        export CC=clang
        export CROSS_COMPILE=aarch64-linux-gnu-
        export CROSS_COMPILE_ARM32=arm-linux-gnueabi-
        chmod +x kernel-5.15/scripts/*.sh || true
        chmod +x kernel-5.15/scripts/*/*.sh || true
        cd kernel-5.15
        make a06x_defconfig
        make -j$(nproc)
        echo "✅ Build complete"
        ls -lh arch/arm64/boot/

    - name: Upload Image.gz-dtb
      uses: actions/upload-artifact@v4
      with:
        name: Image.gz-dtb
        path: kernel-5.15/arch/arm64/boot/Image.gz-dtb

    - name: Pack with AnyKernel3
      run: |
        git clone https://github.com/osm0sis/AnyKernel3.git
        cp kernel-5.15/arch/arm64/boot/Image.gz-dtb AnyKernel3/
        cd AnyKernel3
        zip -r9 ../A066-Kernel-v5.zip ./*
        echo "✅ Packed AnyKernel3 zip"

    - name: Upload AnyKernel3 zip
      uses: actions/upload-artifact@v4
      with:
        name: A066-Kernel-v5
        path: A066-Kernel-v5.zip

    - name: Download stock boot.img from release
      run: |
        curl -L -o boot.img https://github.com/huyzilo77-bot/A066-5G/releases/download/V1/boot.img

    - name: Repack boot.img
      run: |
        sudo apt-get update
        sudo apt-get install -y cpio python3
        git clone https://github.com/osm0sis/mkbootimg_tools.git
        # Unpack boot.img
        mkdir boot_orig
        cd boot_orig
        ../mkbootimg_tools/unpackbootimg -i ../boot.img

        # Replace kernel with the new one
        cp ../kernel-5.15/arch/arm64/boot/Image.gz-dtb ./zImage

        # Repack boot.img
        ../mkbootimg_tools/mkbootimg \
          --kernel ./zImage \
          --ramdisk ./ramdisk.cpio.gz \
          --dtb ./dtb \
          --base $(cat boot.img-base 2>/dev/null || echo 0x40000000) \
          --pagesize $(cat boot.img-pagesize 2>/dev/null || echo 2048) \
          --cmdline "$(cat boot.img-cmdline 2>/dev/null)" \
          -o ../boot-new.img
        cd ..
        echo "✅ Repacked boot-new.img"

    - name: Upload repacked boot.img
      uses: actions/upload-artifact@v4
      with:
        name: boot-new
        path: boot-new.img