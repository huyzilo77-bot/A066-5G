name: Build Samsung A06 GKI Kernel (KSU + SUSFS)

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Free up disk space
        run: |
          sudo rm -rf /usr/share/dotnet /usr/local/lib/android /opt/ghc
          sudo apt-get clean
          df -h

      - name: Install deps & toolchains
        run: |
          sudo apt-get update
          sudo apt-get install -y git wget curl unzip bc build-essential ccache \
            flex bison libssl-dev libncurses5-dev python3 clang lld

      - name: üì• Download Samsung A06 Kernel Source
        run: |
          mkdir -p kernel-src
          cd kernel-src
          wget -q https://github.com/huyzilo77-bot/Bufffkerrnela065g/releases/download/V1/A066B-5G.zip -O kernel.zip
          unzip -q kernel.zip
          tar -xvf Kernel.tar.gz
          ls -la

      - name: üå± Detect Kernel Dir
        run: |
          cd kernel-src
          if [ -d "kernel-5.15" ]; then
            echo "KERNEL_DIR=kernel-5.15" >> $GITHUB_ENV
          elif [ -d "kernel" ]; then
            echo "KERNEL_DIR=kernel" >> $GITHUB_ENV
          else
            echo "‚ùå Kh√¥ng t√¨m th·∫•y th∆∞ m·ª•c kernel!"
            exit 1
          fi

      - name: üå± Clone KernelSU-Next & SUSFS & AnyKernel3
        run: |
          git clone --depth=1 https://github.com/KernelSU-Next/KernelSU-Next.git KernelSU-Next
          git clone --depth=1 https://github.com/sidex15/susfs4ksu-module.git susfs
          git clone --depth=1 https://github.com/osm0sis/AnyKernel3.git AnyKernel3

      - name: üå± Apply KernelSU
        run: |
          cd kernel-src/$KERNEL_DIR
          bash ../../KernelSU-Next/kernel/setup.sh || true

      - name: üå± Apply SUSFS
        run: |
          cd kernel-src/$KERNEL_DIR
          patch -p1 < ../../susfs/susfs.patch || true

      - name: ‚ö° Force enable KSU & SUSFS
        run: |
          cd kernel-src/$KERNEL_DIR
          if ! grep -q "CONFIG_KSU=y" .config; then
            echo 'CONFIG_KSU=y' >> .config
          fi
          if ! grep -q "CONFIG_SUSFS=y" .config; then
            echo 'CONFIG_SUSFS=y' >> .config
          fi
          make olddefconfig
          grep -E "CONFIG_KSU|CONFIG_SUSFS" .config || true

      - name: Build kernel with build.sh
        run: |
          cd kernel-src/$KERNEL_DIR
          bash build.sh -j$(nproc) || { echo "‚ùå Build.sh th·∫•t b·∫°i"; exit 1; }

      - name: Debug build tree
        run: |
          echo "üìÇ Ki·ªÉm tra dist/"
          ls -R kernel-src/$KERNEL_DIR/out/target/product/a06x/obj/KERNEL_OBJ/arch/arm64/boot || true
          ls -R kernel-src/$KERNEL_DIR/out/target/product/a06x/obj/KERNEL_OBJ/dist || true

      - name: Verify KernelSU & SUSFS in config
        run: |
          cd kernel-src/$KERNEL_DIR/out
          grep -q "CONFIG_KSU=y" .config && echo "‚úÖ CONFIG_KSU ƒë√£ b·∫≠t" || (echo "‚ùå Ch∆∞a b·∫≠t KSU"; exit 1)
          grep -q "CONFIG_SUSFS=y" .config && echo "‚úÖ CONFIG_SUSFS ƒë√£ b·∫≠t" || (echo "‚ùå Ch∆∞a b·∫≠t SUSFS"; exit 1)

      - name: Package AnyKernel3 (KernelSU + SUSFS)
        run: |
          set -eux
          DIST_DIR=kernel-src/$KERNEL_DIR/out/target/product/a06x/obj/KERNEL_OBJ/dist
          IMG=""
          if [ -f "$DIST_DIR/Image.gz" ]; then
            IMG=$DIST_DIR/Image.gz
          elif [ -f "$DIST_DIR/Image.lz4" ]; then
            IMG=$DIST_DIR/Image.lz4
          elif [ -f "$DIST_DIR/Image" ]; then
            IMG=$DIST_DIR/Image
          fi
          if [ -z "$IMG" ]; then
            echo "‚ùå Kh√¥ng t√¨m th·∫•y kernel Image trong $DIST_DIR"
            exit 1
          fi
          cp "$IMG" AnyKernel3/Image
          cp -r $DIST_DIR/dtbo* AnyKernel3/ || true
          cd AnyKernel3
          zip -r9 "../Kernel-A06-5.15-KSU-SUSFS.zip" . -x .git README.md *.zip

      - name: Upload Kernel Zip
        uses: actions/upload-artifact@v4
        with:
          name: Kernel-Zip
          path: Kernel-A06-5.15-KSU-SUSFS.zip
