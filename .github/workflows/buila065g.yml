name: Build Samsung A06 GKI Kernel (KSU + SUSFS)

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
      - name: üì• Checkout source
        uses: actions/checkout@v4

      - name: ‚ö° Free up disk space
        run: |
          sudo rm -rf /usr/share/dotnet /usr/local/lib/android /opt/ghc
          sudo apt-get clean
          df -h

      - name: ‚öôÔ∏è Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y git wget curl unzip bc build-essential ccache \
            flex bison libssl-dev libncurses5-dev python3 clang lld

      - name: üì¶ Install toolchains
        run: |
          mkdir -p ~/toolchains
          cd ~/toolchains

          # Clang prebuilts
          git clone --depth=1 https://android.googlesource.com/platform/prebuilts/clang/host/linux-x86 clang

          # GCC cross-compiler
          git clone --depth=1 https://android.googlesource.com/platform/prebuilts/gcc/linux-x86/aarch64/aarch64-linux-android-4.9 gcc64
          git clone --depth=1 https://android.googlesource.com/platform/prebuilts/gcc/linux-x86/arm/arm-linux-androideabi-4.9 gcc32

          echo "PATH=$HOME/toolchains/clang/bin:$PATH" >> $GITHUB_ENV
          echo "CROSS_COMPILE=$HOME/toolchains/gcc64/bin/aarch64-linux-android-" >> $GITHUB_ENV
          echo "CROSS_COMPILE_COMPAT=$HOME/toolchains/gcc32/bin/arm-linux-androideabi-" >> $GITHUB_ENV
          echo "CC=clang" >> $GITHUB_ENV

      - name: üîß Setup ccache
        run: |
          export USE_CCACHE=1
          ccache -M 10G
          ccache -z

      - name: ‚ôªÔ∏è Cache ccache
        uses: actions/cache@v4
        with:
          path: ~/.ccache
          key: ${{ runner.os }}-ccache-${{ github.ref }}
          restore-keys: |
            ${{ runner.os }}-ccache-

      - name: üå± Detect Kernel Dir
        run: |
          if [ -d "kernel-5.15" ]; then
            echo "KERNEL_DIR=kernel-5.15" >> $GITHUB_ENV
          else
            echo "‚ùå Kh√¥ng t√¨m th·∫•y kernel-5.15"
            exit 1
          fi

      - name: üîß Fix permissions
        run: |
          cd $KERNEL_DIR
          find . -type f -name "*.sh" -exec chmod +x {} \;
          find . -type f -name "build.config*" -exec chmod +x {} \;

      - name: üå± Clone KernelSU-Next & SUSFS & AnyKernel3
        run: |
          git clone --depth=1 https://github.com/KernelSU-Next/KernelSU-Next.git KernelSU-Next
          git clone --depth=1 https://github.com/sidex15/susfs4ksu-module.git susfs
          git clone --depth=1 https://github.com/osm0sis/AnyKernel3.git AnyKernel3

      - name: üå± Apply KernelSU
        run: |
          cd $KERNEL_DIR
          bash ../KernelSU-Next/kernel/setup.sh || true

      - name: üå± Apply SUSFS
        run: |
          cd $KERNEL_DIR
          patch -p1 < ../susfs/susfs.patch || true

      - name: Generate build.config
        run: |
          mkdir -p out/target/product/a06x/obj/KERNEL_OBJ
          cd kernel-5.15
          python3 scripts/gen_build_config.py \
            --kernel-defconfig a06x_00_defconfig \
            --kernel-defconfig-overlays "entry_level.config" \
            -m user \
            -o ../out/target/product/a06x/obj/KERNEL_OBJ/build.config

      - name: Build kernel (first pass)
        run: |
          export ARCH=arm64
          export PLATFORM_VERSION=13
          export CROSS_COMPILE=aarch64-linux-gnu-
          export CROSS_COMPILE_COMPAT=arm-linux-gnueabi-
          export OUT_DIR=../out/target/product/a06x/obj/KERNEL_OBJ
          export DIST_DIR=../out/target/product/a06x/obj/KERNEL_OBJ
          export BUILD_CONFIG=../out/target/product/a06x/obj/KERNEL_OBJ/build.config
          cd kernel
          bash build/build.sh olddefconfig

      - name: Force enable KSU & SUSFS
        run: |
          OUT_DIR=out/target/product/a06x/obj/KERNEL_OBJ
          echo "CONFIG_KSU=y" >> $OUT_DIR/.config
          echo "CONFIG_SUSFS=y" >> $OUT_DIR/.config
          cd kernel-5.15
          make O=../out/target/product/a06x/obj/KERNEL_OBJ olddefconfig

      - name: Build kernel (final)
        run: |
          export ARCH=arm64
          export PLATFORM_VERSION=13
          export CROSS_COMPILE=aarch64-linux-gnu-
          export CROSS_COMPILE_COMPAT=arm-linux-gnueabi-
          export OUT_DIR=../out/target/product/a06x/obj/KERNEL_OBJ
          export DIST_DIR=../out/target/product/a06x/obj/KERNEL_OBJ
          export BUILD_CONFIG=../out/target/product/a06x/obj/KERNEL_OBJ/build.config
          cd kernel
          bash build/build.sh -j$(nproc)

      - name: ‚úÖ Verify KernelSU & SUSFS
        run: |
          grep "CONFIG_KSU=y" ../out/target/product/a06x/obj/KERNEL_OBJ/.config || exit 1
          grep "CONFIG_SUSFS=y" ../out/target/product/a06x/obj/KERNEL_OBJ/.config || exit 1

      - name: üì¶ Package AnyKernel3
        run: |
          DIST=../out/target/product/a06x/obj/KERNEL_OBJ/arch/arm64/boot
          IMG=$(find $DIST -maxdepth 1 -name "Image*" | head -n 1 || true)
          [ -z "$IMG" ] && exit 1
          cp "$IMG" AnyKernel3/Image
          cp -r $DIST/dtbo* AnyKernel3/ || true
          cd AnyKernel3
          zip -r9 "../Kernel-A06-KSU-SUSFS.zip" . -x .git README.md *.zip

      - name: üì§ Upload Kernel Zip
        uses: actions/upload-artifact@v4
        with:
          name: Kernel-Zip
          path: Kernel-A06-KSU-SUSFS.zip

      - name: üì§ Upload Build Log
        uses: actions/upload-artifact@v4
        with:
          name: Build-Log
          path: build.log

      - name: üì§ Upload Rejects + Patch + Original
        run: |
          cd kernel-5.15
          git init
          git add .
          git commit -m "Original kernel"
          git apply --reject ../susfs/susfs.patch || true
          git diff > ../Kernel-A06-KSU-SUSFS.patch
          zip -r ../Kernel-A06-Original.zip .
          zip -r ../Kernel-A06-Rejects.zip *.rej || true
        shell: bash

      - name: Upload Kernel Patches
        uses: actions/upload-artifact@v4
        with:
          name: Kernel-Patches
          path: |
            Kernel-A06-Original.zip
            Kernel-A06-KSU-SUSFS.patch
            Kernel-A06-Rejects.zip
            
